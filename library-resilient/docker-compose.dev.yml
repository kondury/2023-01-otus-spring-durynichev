version: '3.8'
services:
  library-dev:
    build:
      context: .
      target: development
    ports:
      - "8000:8000"
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - DB_URL=jdbc:postgresql://postgres-dev:5432/librarydb
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - postgres-dev
    volumes:
      - ./:/app
      # Maven cache (optional)
      - ~/.m2:/root/.m2
    networks:
      main-dev:
  postgres-dev:
    image: "postgres:15.3"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=librarydb
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    networks:
      main-dev:
  grafana-dev:
    build: './docker/config/grafana'
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - PROMETHEUS_DATASOURCE= http://prometheus-dev:9090
    networks:
      monitoring-dev:
  prometheus-dev:
    image: "prom/prometheus:v2.45.0"
    ports:
      - "9090:9090"
    volumes:
      - ./docker/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./docker/prometheus:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      monitoring-dev:
        aliases:
          - prometheus
networks:
  main-dev:
  monitoring-dev:
